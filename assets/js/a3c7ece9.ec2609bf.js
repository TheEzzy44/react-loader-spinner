"use strict";(self.webpackChunkrls_docs=self.webpackChunkrls_docs||[]).push([[244],{5781:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var l=t(7462),i=(t(7294),t(3905)),a=t(2052);const r={},o="LineWave",s={unversionedId:"components/line-wave",id:"components/line-wave",title:"LineWave",description:"Props",source:"@site/docs/components/line-wave.mdx",sourceDirName:"components",slug:"/components/line-wave",permalink:"/react-loader-spinner/docs/components/line-wave",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Infinity Spin",permalink:"/react-loader-spinner/docs/components/infinity-spin"},next:{title:"MagnifyingGlass",permalink:"/react-loader-spinner/docs/components/magnifying-glass"}},p={},d=[{value:"Props",id:"props",level:2},{value:"More Examples:",id:"more-examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:3}],m={toc:d};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,l.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"linewave"},"LineWave"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<LineWave\n  height="100"\n  width="100"\n  color="#4fa94d"\n  ariaLabel="line-wave"\n  wrapperStyle={{}}\n  wrapperClass=""\n  visible={true}\n  firstLineColor=""\n  middleLineColor=""\n  lastLineColor=""\n/>\n')),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)(a.Z,{properties:[{name:"height",type:"number | string",default:"100",description:"Height of the line wave."},{name:"width",type:"number | string",default:"100",description:"Width of the line wave."},{name:"color",type:"string",default:"#4fa94d",description:"Color of the line wave."},{name:"ariaLabel",type:"string",default:"line-wave",description:"ARIA label for the line wave."},{name:"wrapperStyle",type:"object",default:"{}",description:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style."},{name:"wrapperClass",type:"string",default:"undefined",description:"Class name for the wrapper element. It can be used for custom styling."},{name:"visible",type:"boolean",default:"true",description:"Whether the line wave is visible."},{name:"firstLineColor",type:"string",default:"undefined",description:"Color of the first line. If not provided, the color will be the same as the color."},{name:"middleLineColor",type:"string",default:"undefined",description:"Color of the middle line. If not provided, the color will be the same as the color."},{name:"lastLineColor",type:"string",default:"undefined",description:"Color of the last line. If not provided, the color will be the same as the color."}],mdxType:"PropsTable"}),(0,i.kt)("h2",{id:"more-examples"},"More Examples:"),(0,i.kt)("h3",{id:"example-1"},"Example 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<LineWave color="red" firstLineColor="green" />\n')),(0,i.kt)("h3",{id:"example-2"},"Example 2"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<LineWave color="red" middleLineColor="green" lastLineColor="green" />\n')),(0,i.kt)("h3",{id:"example-3"},"Example 3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<LineWave\n  color="red"\n  firstLineColor="blue"\n  middleLineColor="green"\n  lastLineColor="grey"\n/>\n')))}c.isMDXComponent=!0}}]);