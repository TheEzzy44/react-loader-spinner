"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8051],{1470:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var t=r(5893),a=r(1151),n=r(5305),s=r(1992),i=r(5871);const l={},d="Oval",c={id:"components/oval",title:"Oval",description:"<LiveProvider",source:"@site/docs/components/oval.mdx",sourceDirName:"components",slug:"/components/oval",permalink:"/react-loader-spinner/docs/components/oval",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/oval.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mutating Dots",permalink:"/react-loader-spinner/docs/components/mutating-dots"},next:{title:"Progress Bar",permalink:"/react-loader-spinner/docs/components/progress-bar"}},p={},h=[{value:"Props",id:"props",level:2},{value:"More examples",id:"more-examples",level:2}];function u(e){const o={h1:"h1",h2:"h2",hr:"hr",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"oval",children:"Oval"}),"\n",(0,t.jsxs)(s.nu,{code:'\n  render(<Oval\n  visible={true}\n  height="80"\n  width="80"\n  color="#4fa94d"\n  ariaLabel="oval-loading"\n  wrapperStyle={{}}\n  wrapperClass=""\n  />)\n',scope:{Oval:i.Oval},noInline:!0,children:[(0,t.jsx)(s.i5,{}),(0,t.jsx)("br",{}),(0,t.jsx)(s.uz,{}),(0,t.jsx)(s.IF,{})]}),"\n",(0,t.jsx)(o.hr,{}),"\n",(0,t.jsx)(o.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(n.Z,{properties:[{name:"height",type:"number|string",default:"80",description:"Height of the oval"},{name:"width",type:"number|string",default:"80",description:"Width of the oval"},{name:"color",type:"string",default:"#4fa94d",description:"Color of the oval. Can be hex or rgba. Default is #4fa94d"},{name:"secondaryColor",type:"string",default:"undefined",description:"Color of the secondary oval. Can be hex or rgba. Default is same as color"},{name:"strokeWidth",type:"number",default:"2",description:"Width of the stroke"},{name:"strokeWidthSecondary",type:"number",default:"2",description:"Width of the secondary stroke. Default is same as strokeWidth"},{name:"wrapperStyle",type:"object",default:"{}",description:"Style of the wrapper"},{name:"wrapperClass",type:"string",default:"",description:"Class of the wrapper"},{name:"visible",type:"boolean",default:"true",description:"Whether the oval is visible"},{name:"ariaLabel",type:"string",default:"oval-loading",description:"Aria label of the oval. Default is oval-loading. Will be overridden if ariaLabel is passed in props"}]}),"\n"," ","\n",(0,t.jsx)(o.h2,{id:"more-examples",children:"More examples"}),"\n",(0,t.jsx)(o.hr,{}),"\n",(0,t.jsx)(i.Oval,{ariaLabel:"loading-indicator",height:100,width:100,strokeWidth:5,strokeWidthSecondary:1,color:"blue",secondaryColor:"white"}),"\n",(0,t.jsx)(i.Oval,{ariaLabel:"loading-indicator",height:100,width:100,strokeWidth:1,strokeWidthSecondary:2e3,color:"blue",secondaryColor:"red"}),"\n",(0,t.jsx)(i.Oval,{ariaLabel:"loading-indicator",height:100,width:100,strokeWidth:2e3,strokeWidthSecondary:2030,color:"blue",secondaryColor:"Grey"})]})}function m(e={}){const{wrapper:o}={...(0,a.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);