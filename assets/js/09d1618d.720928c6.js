"use strict";(self.webpackChunkrls_docs=self.webpackChunkrls_docs||[]).push([[951],{5888:(e,t,a)=>{a.d(t,{oD:()=>o});const r=e=>({height:"Height of the "+e+" SVG. For more customization, use the wrapper className.",width:"Width of the "+e+" SVG. For more customization, use the wrapper className. ",colors:"Colors of the "+e+" SVG. Accepts multiple color objects. If a complete list of colors is not provided, defaults will be used. Refer to the example.",color:"Color of the "+e+" SVG.",ariaLabel:"Aria label of the "+e+". It will be used for the aria-label attribute in the wrapper element.",wrapperStyle:"Styles to be applied to the wrapper. It should be a valid CSS object and can be used for custom styling. It will override the default style.",wrapperClassName:"ClassName to be applied to the wrapper. It can be used for custom styling and will override the default style.",visible:"Specifies whether the "+e+" is visible or not. If set to false, the "+e+" will not be rendered.",radius:"Radius of the circle(s) in the "+e+" component. For further customization, use the wrapper className."}),s={height:"number | string",width:"number | string",colors:"Array<string>",color:"string: #hex-code",secondaryColor:"string: #hex-code",ariaLabel:"string",wrapperStyle:"object",wrapperClassName:"string",visible:"boolean",radius:"number | string",strokeWidth:"number | string",strokeColor:"string"},i=e=>({height:"80",width:"80",color:"#4fa94d",secondaryColor:"#4fa94d",ariaLabel:e+"-loading",wrapperStyle:JSON.stringify({},null,2),wrapperClassName:"undefined",visible:"true"}),o=function(e,t){return void 0===t&&(t=[]),[{name:"height",type:s.height,default:i(e).height,description:r(e).height},{name:"width",type:s.width,default:i(e).width,description:r(e).width},{name:"colors",type:s.colors,default:JSON.stringify(["#4fa94d","#4fa94d","#4fa94d"]),description:r(e).colors},{name:"ariaLabel",type:s.ariaLabel,default:i(e).ariaLabel,description:r(e).ariaLabel},{name:"wrapperStyle",type:s.wrapperStyle,default:i(e).wrapperStyle,description:r(e).wrapperStyle},{name:"wrapperClassName",type:s.wrapperClassName,default:i(e).wrapperClassName,description:r(e).wrapperClassName},{name:"visible",type:s.visible,default:i(e).visible,description:r(e).visible}].filter((e=>!t.includes(e.name)))}},329:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>n,metadata:()=>p,toc:()=>c});var r=a(7462),s=(a(7294),a(3905)),i=a(2052),o=a(5888);const n={},l="MagnifyingGlass",p={unversionedId:"components/magnifying-glass",id:"components/magnifying-glass",title:"MagnifyingGlass",description:"Props",source:"@site/docs/components/magnifying-glass.mdx",sourceDirName:"components",slug:"/components/magnifying-glass",permalink:"/react-loader-spinner/docs/components/magnifying-glass",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LineWave",permalink:"/react-loader-spinner/docs/components/line-wave"},next:{title:"Mutating Dots",permalink:"/react-loader-spinner/docs/components/mutating-dots"}},d={},c=[{value:"Props",id:"props",level:2}],g={toc:c};function m(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,r.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"magnifyingglass"},"MagnifyingGlass"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<MagnifyingGlass\n  visible={true}\n  height="80"\n  width="80"\n  ariaLabel="MagnifyingGlass-loading"\n  wrapperStyle={{}}\n  wrapperClass="MagnifyingGlass-wrapper"\n  glassColor = \'#c0efff\'\n  color = \'#e15b64\'\n/>\n')),(0,s.kt)("h2",{id:"props"},"Props"),(0,s.kt)(i.Z,{properties:[...(0,o.oD)("magnifying-glass",["colors"]),{name:"glassColor",type:"string",default:"#c0efff",description:"Color of the magnifying glass lensed area"},{name:"color",type:"string",default:"#e15b64",description:"Color of the magnifying glass frame"}],mdxType:"PropsTable"}))}m.isMDXComponent=!0}}]);