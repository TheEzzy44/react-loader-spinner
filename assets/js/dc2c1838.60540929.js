"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8873],{2477:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var n=o(5893),r=o(1151),s=o(5305),i=o(1992),a=o(5871);const l={},d="RevolvingDot",c={id:"components/revolving-dot",title:"RevolvingDot",description:"<LiveProvider",source:"@site/docs/components/revolving-dot.mdx",sourceDirName:"components",slug:"/components/revolving-dot",permalink:"/react-loader-spinner/docs/components/revolving-dot",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/revolving-dot.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Puff",permalink:"/react-loader-spinner/docs/components/puff"},next:{title:"Rings",permalink:"/react-loader-spinner/docs/components/rings"}},p={},u=[{value:"Props",id:"props",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",hr:"hr",p:"p",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"revolvingdot",children:"RevolvingDot"}),"\n",(0,n.jsxs)(i.nu,{code:'\n  render(<RevolvingDot\n  visible={true}\n  height="80"\n  width="80"\n  color="#4fa94d"\n  ariaLabel="revolving-dot-loading"\n  wrapperStyle={{}}\n  wrapperClass=""\n  />)\n',scope:{RevolvingDot:a.RevolvingDot},noInline:!0,children:[(0,n.jsx)(i.i5,{}),(0,n.jsx)("br",{}),(0,n.jsx)(i.uz,{}),(0,n.jsx)(i.IF,{})]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["This spinner is not supported by Safari. ",(0,n.jsx)(t.a,{href:"https://github.com/mhnpd/react-loader-spinner/issues/150",children:"See"})]}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,n.jsx)(s.Z,{properties:[{name:"radius",type:"number | string",default:"6",description:"Radius of the circle"},{name:"strokeWidth",type:"number | string",default:"6",description:"Stoke width of the circle"},{name:"color",type:"string",default:"#4fa94d",description:"Color of the dot."},{name:"secondaryColor",type:"string",default:"",description:"Color of the circle. If not set, the color will be the same as the primary color."},{name:"wrapperStyle",type:"object",default:"{}",description:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style."},{name:"wrapperClass",type:"string",default:"",description:"Class of the wrapper element. It can be used for custom styling."},{name:"visible",type:"boolean",default:"true",description:"Visibility of the component."},{name:"ariaLabel",type:"string",default:"revolving-dot-loading",description:"Aria label of the rotating dot. It is used for accessibility."}]})]})}function m(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);