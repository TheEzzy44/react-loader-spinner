"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6618],{636:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=r(5893),a=r(1151),i=r(5305);const s={},o="Triangle",l={id:"components/triangle",title:"Triangle",description:"Props",source:"@site/docs/components/triangle.mdx",sourceDirName:"components",slug:"/components/triangle",permalink:"/mhnpd/react-loader-spinner/docs/components/triangle",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/triangle.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Three Dots",permalink:"/mhnpd/react-loader-spinner/docs/components/three-dots"},next:{title:"Vortex",permalink:"/mhnpd/react-loader-spinner/docs/components/vortex"}},d={},p=[{value:"Props",id:"props",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",pre:"pre",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"triangle",children:"Triangle"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:'<Triangle\n  height="80"\n  width="80"\n  color="#4fa94d"\n  ariaLabel="triangle-loading"\n  wrapperStyle={{}}\n  wrapperClassName=""\n  visible={true}\n/>\n'})}),"\n",(0,n.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,n.jsx)(i.Z,{properties:[{name:"height",type:"number | string",default:"80",description:"Height of the triangle"},{name:"width",type:"number | string",default:"80",description:"Width of the triangle"},{name:"color",type:"string",default:"#4fa94d",description:"Color of the triangle"},{name:"ariaLabel",type:"string",default:"triangle-loading",description:"Aria label of the triangle. Will be used for the `aria-label` attribute of the wrapper element"},{name:"wrapperStyle",type:"object",default:"{}",description:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style."},{name:"wrapperClassName",type:"string",default:"undefined",description:"Class name of the wrapper element. It can be used for custom styling."},{name:"visible",type:"boolean",default:"true",description:"Whether the triangle is visible"}]})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);