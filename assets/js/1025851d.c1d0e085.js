"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4402],{5521:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var r=n(5893),a=n(1151),i=n(5305),s=n(1992),o=n(5871);const l={},p="Rotating Square",d={id:"components/rotating-square",title:"Rotating Square",description:"<LiveProvider",source:"@site/docs/components/rotating-square.mdx",sourceDirName:"components",slug:"/components/rotating-square",permalink:"/react-loader-spinner/docs/components/rotating-square",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/rotating-square.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rotating Lines",permalink:"/react-loader-spinner/docs/components/rotating-lines"},next:{title:"Rotating Triangles",permalink:"/react-loader-spinner/docs/components/rotating-triangle"}},c={},u=[{value:"Props",id:"props",level:2},{value:"Example 2",id:"example-2",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",hr:"hr",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"rotating-square",children:"Rotating Square"}),"\n",(0,r.jsxs)(s.nu,{code:'\n  render(<RotatingSquare\n  visible={true}\n  height="100"\n  width="100"\n  color="#4fa94d"\n  ariaLabel="rotating-square-loading"\n  wrapperStyle={{}}\n  wrapperClass=""\n  />)\n',scope:{RotatingSquare:o.RotatingSquare},noInline:!0,children:[(0,r.jsx)(s.i5,{}),(0,r.jsx)("br",{}),(0,r.jsx)(s.uz,{}),(0,r.jsx)(s.IF,{})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,r.jsx)(i.Z,{properties:[{name:"height",type:"number | string",default:"100",description:"Height of the spinner"},{name:"width",type:"number | string",default:"100",description:"Width of the spinner"},{name:"color",type:"string",default:"#4fa94d",description:"Color of the spinner"},{name:"ariaLabel",type:"string",default:"rotating-square-loading",description:"Aria label of the spinner"},{name:"strokeWidth",type:"number | string",default:"4",description:"Stroke width of the spinner"},{name:"wrapperStyle",type:"object",default:"{}",description:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style."},{name:"wrapperClass",type:"string",default:"",description:"Class of the wrapper element. It can be used for custom styling."},{name:"visible",type:"boolean",default:"true",description:"Whether the spinner is visible"}]}),"\n",(0,r.jsx)(t.h2,{id:"example-2",children:"Example 2"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:'<RotatingSquare\n  ariaLabel="rotating-square"\n  visible={true}\n  color="grey"\n  strokeWidth="10"\n/>\n'})})]})}function g(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);