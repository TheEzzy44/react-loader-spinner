"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9820],{2955:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var i=t(5893),n=t(1151),o=t(5305),s=t(1992),a=t(5871);const l={},c="Circles With Bar",d={id:"components/circles-with-bar",title:"Circles With Bar",description:"<LiveProvider",source:"@site/docs/components/circles-with-bar.mdx",sourceDirName:"components",slug:"/components/circles-with-bar",permalink:"/react-loader-spinner/docs/components/circles-with-bar",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/circles-with-bar.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Blocks",permalink:"/react-loader-spinner/docs/components/blocks"},next:{title:"Circles",permalink:"/react-loader-spinner/docs/components/circles"}},p={},h=[{value:"Props",id:"props",level:2}];function u(e){const r={h1:"h1",h2:"h2",hr:"hr",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"circles-with-bar",children:"Circles With Bar"}),"\n",(0,i.jsxs)(s.nu,{code:'\n  render(<CirclesWithBar\n  height="100"\n  width="100"\n  color="#4fa94d"\n  outerCircleColor="#4fa94d"\n  innerCircleColor="#4fa94d"\n  barColor="#4fa94d"\n  ariaLabel="circles-with-bar-loading"\n  wrapperStyle={{}}\n  wrapperClass=""\n  visible={true}\n  />)\n',scope:{CirclesWithBar:a.CirclesWithBar},noInline:!0,children:[(0,i.jsx)(s.i5,{}),(0,i.jsx)("br",{}),(0,i.jsx)(s.uz,{}),(0,i.jsx)(s.IF,{})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"props",children:"Props"}),"\n",(0,i.jsx)(o.Z,{properties:[{name:"wrapperStyle",type:"object",default:"undefined",description:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style."},{name:"visible",type:"boolean",default:"true",description:"Whether the circles are visible"},{name:"wrapperClass",type:"string",default:"",description:"CSS class name for the wrapper element"},{name:"height",type:"string | number",default:"100",description:"Height of the wrapper element"},{name:"width",type:"string | number",default:"100",description:"Width of the wrapper element"},{name:"color",type:"string",default:"#4fa94d",description:"Color of the outer circle. It will also be used for the bar color if `barColor` is not specified."},{name:"outerCircleColor",type:"string",default:"undefined",description:"Color of the outer circle. If not defined, it will be the same as color"},{name:"innerCircleColor",type:"string",default:"undefined",description:"Color of the inner circle. If not defined, it will be the same as color"},{name:"barColor",type:"string",default:"undefined",description:"Color of the bar. If not defined, it will be the same as color"},{name:"ariaLabel",type:"string",default:"circles-with-bar-loading",description:"Aria label for the wrapper element"}]})]})}function f(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);