"use strict";(self.webpackChunkrls_docs=self.webpackChunkrls_docs||[]).push([[820],{6686:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var i=t(7462),o=(t(7294),t(3905)),n=t(2052);const l={},a="Circles With Bar",s={unversionedId:"components/circles-with-bar",id:"components/circles-with-bar",title:"Circles With Bar",description:"Props",source:"@site/docs/components/circles-with-bar.mdx",sourceDirName:"components",slug:"/components/circles-with-bar",permalink:"/react-loader-spinner/docs/components/circles-with-bar",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Blocks",permalink:"/react-loader-spinner/docs/components/blocks"},next:{title:"Circles",permalink:"/react-loader-spinner/docs/components/circles"}},c={},p=[{value:"Props",id:"props",level:2}],d={toc:p};function u(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"circles-with-bar"},"Circles With Bar"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<CirclesWithBar\n  height="100"\n  width="100"\n  color="#4fa94d"\n  wrapperStyle={{}}\n  wrapperClass=""\n  visible={true}\n  outerCircleColor=""\n  innerCircleColor=""\n  barColor=""\n  ariaLabel=\'circles-with-bar-loading\'\n/>\n')),(0,o.kt)("h2",{id:"props"},"Props"),(0,o.kt)(n.Z,{properties:[{name:"wrapperStyle",type:"object",default:"undefined",description:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style."},{name:"visible",type:"boolean",default:"true",description:"Whether the circles are visible"},{name:"wrapperClass",type:"string",default:"",description:"CSS class name for the wrapper element"},{name:"height",type:"string | number",default:"100",description:"Height of the wrapper element"},{name:"width",type:"string | number",default:"100",description:"Width of the wrapper element"},{name:"color",type:"string",default:"#4fa94d",description:"Color of the outer circle. It will also be used for the bar color if `barColor` is not specified."},{name:"outerCircleColor",type:"string",default:"undefined",description:"Color of the outer circle. If not defined, it will be the same as color"},{name:"innerCircleColor",type:"string",default:"undefined",description:"Color of the inner circle. If not defined, it will be the same as color"},{name:"barColor",type:"string",default:"undefined",description:"Color of the bar. If not defined, it will be the same as color"},{name:"ariaLabel",type:"string",default:"circles-with-bar-loading",description:"Aria label for the wrapper element"}],mdxType:"PropsTable"}))}u.isMDXComponent=!0}}]);