"use strict";(self.webpackChunkrls_docs=self.webpackChunkrls_docs||[]).push([[199],{5888:(e,r,t)=>{t.d(r,{oD:()=>i});const o=e=>({height:"Height of the "+e+" SVG. For more customization, use the wrapper className.",width:"Width of the "+e+" SVG. For more customization, use the wrapper className. ",colors:"Colors of the "+e+" SVG. Accepts multiple color objects. If a complete list of colors is not provided, defaults will be used. Refer to the example.",color:"Color of the "+e+" SVG.",ariaLabel:"Aria label of the "+e+". It will be used for the aria-label attribute in the wrapper element.",wrapperStyle:"Styles to be applied to the wrapper. It should be a valid CSS object and can be used for custom styling. It will override the default style.",wrapperClassName:"ClassName to be applied to the wrapper. It can be used for custom styling and will override the default style.",visible:"Specifies whether the "+e+" is visible or not. If set to false, the "+e+" will not be rendered.",radius:"Radius of the circle(s) in the "+e+" component. For further customization, use the wrapper className."}),s={height:"number | string",width:"number | string",colors:"Array<string>",color:"string: #hex-code",secondaryColor:"string: #hex-code",ariaLabel:"string",wrapperStyle:"object",wrapperClassName:"string",visible:"boolean",radius:"number | string",strokeWidth:"number | string",strokeColor:"string"},a=e=>({height:"80",width:"80",color:"#4fa94d",secondaryColor:"#4fa94d",ariaLabel:e+"-loading",wrapperStyle:JSON.stringify({},null,2),wrapperClassName:"undefined",visible:"true"}),i=function(e,r){return void 0===r&&(r=[]),[{name:"height",type:s.height,default:a(e).height,description:o(e).height},{name:"width",type:s.width,default:a(e).width,description:o(e).width},{name:"colors",type:s.colors,default:JSON.stringify(["#4fa94d","#4fa94d","#4fa94d"]),description:o(e).colors},{name:"ariaLabel",type:s.ariaLabel,default:a(e).ariaLabel,description:o(e).ariaLabel},{name:"wrapperStyle",type:s.wrapperStyle,default:a(e).wrapperStyle,description:o(e).wrapperStyle},{name:"wrapperClassName",type:s.wrapperClassName,default:a(e).wrapperClassName,description:o(e).wrapperClassName},{name:"visible",type:s.visible,default:a(e).visible,description:o(e).visible}].filter((e=>!r.includes(e.name)))}},1503:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>n,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var o=t(7462),s=(t(7294),t(3905)),a=t(2052),i=t(5888);const l={},n="Progress Bar",p={unversionedId:"components/progress-bar",id:"components/progress-bar",title:"Progress Bar",description:"Props",source:"@site/docs/components/progress-bar.mdx",sourceDirName:"components",slug:"/components/progress-bar",permalink:"/react-loader-spinner/docs/components/progress-bar",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Oval",permalink:"/react-loader-spinner/docs/components/oval"},next:{title:"Puff",permalink:"/react-loader-spinner/docs/components/puff"}},d={},c=[{value:"Props",id:"props",level:2}],u={toc:c};function h(e){let{components:r,...t}=e;return(0,s.kt)("wrapper",(0,o.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"progress-bar"},"Progress Bar"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<ProgressBar\n  height="80"\n  width="80"\n  ariaLabel="progress-bar-loading"\n  wrapperStyle={{}}\n  wrapperClass="progress-bar-wrapper"\n  borderColor = \'#F4442E\'\n  barColor = \'#51E5FF\'\n/>\n')),(0,s.kt)("h2",{id:"props"},"Props"),(0,s.kt)(a.Z,{properties:[...(0,i.oD)("progress-bar",["colors"]),{name:"borderColor",type:"string",default:"#51E5FF",description:"Color of the border of the progress bar"},{name:"barColor",type:"string",default:"#F4442E",description:"Color of the progress bar"}],mdxType:"PropsTable"}))}h.isMDXComponent=!0}}]);