"use strict";(self.webpackChunkrls_docs=self.webpackChunkrls_docs||[]).push([[284],{5888:(e,t,r)=>{r.d(t,{oD:()=>i});const s=e=>({height:"Height of the "+e+" SVG. For more customization, use the wrapper className.",width:"Width of the "+e+" SVG. For more customization, use the wrapper className. ",colors:"Colors of the "+e+" SVG. Accepts multiple color objects. If a complete list of colors is not provided, defaults will be used. Refer to the example.",color:"Color of the "+e+" SVG.",ariaLabel:"Aria label of the "+e+". It will be used for the aria-label attribute in the wrapper element.",wrapperStyle:"Styles to be applied to the wrapper. It should be a valid CSS object and can be used for custom styling. It will override the default style.",wrapperClassName:"ClassName to be applied to the wrapper. It can be used for custom styling and will override the default style.",visible:"Specifies whether the "+e+" is visible or not. If set to false, the "+e+" will not be rendered.",radius:"Radius of the circle(s) in the "+e+" component. For further customization, use the wrapper className."}),a={height:"number | string",width:"number | string",colors:"Array<string>",color:"string: #hex-code",secondaryColor:"string: #hex-code",ariaLabel:"string",wrapperStyle:"object",wrapperClassName:"string",visible:"boolean",radius:"number | string",strokeWidth:"number | string",strokeColor:"string"},o=e=>({height:"80",width:"80",color:"#4fa94d",secondaryColor:"#4fa94d",ariaLabel:e+"-loading",wrapperStyle:JSON.stringify({},null,2),wrapperClassName:"undefined",visible:"true"}),i=function(e,t){return void 0===t&&(t=[]),[{name:"height",type:a.height,default:o(e).height,description:s(e).height},{name:"width",type:a.width,default:o(e).width,description:s(e).width},{name:"colors",type:a.colors,default:JSON.stringify(["#4fa94d","#4fa94d","#4fa94d"]),description:s(e).colors},{name:"ariaLabel",type:a.ariaLabel,default:o(e).ariaLabel,description:s(e).ariaLabel},{name:"wrapperStyle",type:a.wrapperStyle,default:o(e).wrapperStyle,description:s(e).wrapperStyle},{name:"wrapperClassName",type:a.wrapperClassName,default:o(e).wrapperClassName,description:s(e).wrapperClassName},{name:"visible",type:a.visible,default:o(e).visible,description:s(e).visible}].filter((e=>!t.includes(e.name)))}},95:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>n,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var s=r(7462),a=(r(7294),r(3905)),o=r(2052),i=r(5888);const l={},n="Hourglass",p={unversionedId:"components/hourglass",id:"components/hourglass",title:"Hourglass",description:"Props",source:"@site/docs/components/hourglass.mdx",sourceDirName:"components",slug:"/components/hourglass",permalink:"/react-loader-spinner/docs/components/hourglass",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hearts",permalink:"/react-loader-spinner/docs/components/hearts"},next:{title:"Infinity Spin",permalink:"/react-loader-spinner/docs/components/infinity-spin"}},d={},c=[{value:"Props",id:"props",level:2}],u={toc:c};function h(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,s.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hourglass"},"Hourglass"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Hourglass\n  visible={true}\n  height="80"\n  width="80"\n  ariaLabel="hourglass-loading"\n  wrapperStyle={{}}\n  wrapperClass=""\n  colors={[\'#306cce\', \'#72a1ed\']}\n/>\n')),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)(o.Z,{properties:[...(0,i.oD)("hourglass",["color"])],mdxType:"PropsTable"}))}h.isMDXComponent=!0}}]);