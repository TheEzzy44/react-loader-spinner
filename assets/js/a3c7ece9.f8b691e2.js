"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5244],{7579:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var l=i(5893),r=i(1151),t=i(5305),o=i(1992),a=i(5871);const s={},d="LineWave",p={id:"components/line-wave",title:"LineWave",description:"<LiveProvider",source:"@site/docs/components/line-wave.mdx",sourceDirName:"components",slug:"/components/line-wave",permalink:"/react-loader-spinner/docs/components/line-wave",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/line-wave.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Infinity Spin",permalink:"/react-loader-spinner/docs/components/infinity-spin"},next:{title:"MagnifyingGlass",permalink:"/react-loader-spinner/docs/components/magnifying-glass"}},c={},m=[{value:"Props",id:"props",level:2},{value:"More Examples:",id:"more-examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",pre:"pre",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"linewave",children:"LineWave"}),"\n",(0,l.jsxs)(o.nu,{code:'\n  render(<LineWave\n  visible={true}\n  height="100"\n  width="100"\n  color="#4fa94d"\n  ariaLabel="line-wave-loading"\n  wrapperStyle={{}}\n  wrapperClass=""\n  firstLineColor=""\n  middleLineColor=""\n  lastLineColor=""\n  />)\n',scope:{LineWave:a.LineWave},noInline:!0,children:[(0,l.jsx)(o.i5,{}),(0,l.jsx)("br",{}),(0,l.jsx)(o.uz,{}),(0,l.jsx)(o.IF,{})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,l.jsx)(t.Z,{properties:[{name:"height",type:"number | string",default:"100",description:"Height of the line wave."},{name:"width",type:"number | string",default:"100",description:"Width of the line wave."},{name:"color",type:"string",default:"#4fa94d",description:"Color of the line wave."},{name:"ariaLabel",type:"string",default:"line-wave",description:"ARIA label for the line wave."},{name:"wrapperStyle",type:"object",default:"{}",description:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style."},{name:"wrapperClass",type:"string",default:"undefined",description:"Class name for the wrapper element. It can be used for custom styling."},{name:"visible",type:"boolean",default:"true",description:"Whether the line wave is visible."},{name:"firstLineColor",type:"string",default:"undefined",description:"Color of the first line. If not provided, the color will be the same as the color."},{name:"middleLineColor",type:"string",default:"undefined",description:"Color of the middle line. If not provided, the color will be the same as the color."},{name:"lastLineColor",type:"string",default:"undefined",description:"Color of the last line. If not provided, the color will be the same as the color."}]}),"\n"," ","\n",(0,l.jsx)(n.h2,{id:"more-examples",children:"More Examples:"}),"\n",(0,l.jsx)(n.h3,{id:"example-1",children:"Example 1"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:'<LineWave color="red" firstLineColor="green" />\n'})}),"\n",(0,l.jsx)(n.h3,{id:"example-2",children:"Example 2"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:'<LineWave color="red" middleLineColor="green" lastLineColor="green" />\n'})}),"\n",(0,l.jsx)(n.h3,{id:"example-3",children:"Example 3"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:'<LineWave\n  color="red"\n  firstLineColor="blue"\n  middleLineColor="green"\n  lastLineColor="grey"\n/>\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);