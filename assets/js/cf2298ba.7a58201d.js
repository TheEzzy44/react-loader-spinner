"use strict";(self.webpackChunkrls_docs=self.webpackChunkrls_docs||[]).push([[212],{5888:(e,r,t)=>{t.d(r,{oD:()=>i});const o=e=>({height:"Height of the "+e+" SVG. For more customization, use the wrapper className.",width:"Width of the "+e+" SVG. For more customization, use the wrapper className. ",colors:"Colors of the "+e+" SVG. Accepts multiple color objects. If a complete list of colors is not provided, defaults will be used. Refer to the example.",color:"Color of the "+e+" SVG.",ariaLabel:"Aria label of the "+e+". It will be used for the aria-label attribute in the wrapper element.",wrapperStyle:"Styles to be applied to the wrapper. It should be a valid CSS object and can be used for custom styling. It will override the default style.",wrapperClassName:"ClassName to be applied to the wrapper. It can be used for custom styling and will override the default style.",visible:"Specifies whether the "+e+" is visible or not. If set to false, the "+e+" will not be rendered.",radius:"Radius of the circle(s) in the "+e+" component. For further customization, use the wrapper className."}),a={height:"number | string",width:"number | string",colors:"Array<string>",color:"string: #hex-code",secondaryColor:"string: #hex-code",ariaLabel:"string",wrapperStyle:"object",wrapperClassName:"string",visible:"boolean",radius:"number | string",strokeWidth:"number | string",strokeColor:"string"},s=e=>({height:"80",width:"80",color:"#4fa94d",secondaryColor:"#4fa94d",ariaLabel:e+"-loading",wrapperStyle:JSON.stringify({},null,2),wrapperClassName:"undefined",visible:"true"}),i=function(e,r){return void 0===r&&(r=[]),[{name:"height",type:a.height,default:s(e).height,description:o(e).height},{name:"width",type:a.width,default:s(e).width,description:o(e).width},{name:"colors",type:a.colors,default:JSON.stringify(["#4fa94d","#4fa94d","#4fa94d"]),description:o(e).colors},{name:"ariaLabel",type:a.ariaLabel,default:s(e).ariaLabel,description:o(e).ariaLabel},{name:"wrapperStyle",type:a.wrapperStyle,default:s(e).wrapperStyle,description:o(e).wrapperStyle},{name:"wrapperClassName",type:a.wrapperClassName,default:s(e).wrapperClassName,description:o(e).wrapperClassName},{name:"visible",type:a.visible,default:s(e).visible,description:o(e).visible}].filter((e=>!r.includes(e.name)))}},1223:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>n,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var o=t(7462),a=(t(7294),t(3905)),s=t(2052),i=t(5888);const l={},n="Vortex",p={unversionedId:"components/vortex",id:"components/vortex",title:"Vortex",description:"Props",source:"@site/docs/components/vortex.mdx",sourceDirName:"components",slug:"/components/vortex",permalink:"/react-loader-spinner/docs/components/vortex",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Triangle",permalink:"/react-loader-spinner/docs/components/triangle"},next:{title:"Watch",permalink:"/react-loader-spinner/docs/components/watch"}},d={},c=[{value:"Props",id:"props",level:2}],u={toc:c};function h(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"vortex"},"Vortex"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Vortex\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"vortex-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"vortex-wrapper\"\n  colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n/>\n")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)(s.Z,{properties:[...(0,i.oD)("vortex",["colors"]),{name:"colors",type:"array",default:'["red", "green", "blue", "yellow", "orange", "purple"]',description:"An array of colors to use for the vortex"}],mdxType:"PropsTable"}))}h.isMDXComponent=!0}}]);