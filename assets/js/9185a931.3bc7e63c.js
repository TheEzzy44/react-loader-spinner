"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9459],{800:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=s(5893),n=s(1151),o=s(5305);const a={},i="Hearts",l={id:"components/hearts",title:"Hearts",description:"Props",source:"@site/docs/components/hearts.mdx",sourceDirName:"components",slug:"/components/hearts",permalink:"/react-loader-spinner/docs/components/hearts",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/hearts.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Grid",permalink:"/react-loader-spinner/docs/components/grid"},next:{title:"Hourglass",permalink:"/react-loader-spinner/docs/components/hourglass"}},p={},c=[{value:"Props",id:"props",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",pre:"pre",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"hearts",children:"Hearts"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:'<Hearts\n  height="80"\n  width="80"\n  color="#4fa94d"\n  ariaLabel="hearts-loading"\n  wrapperStyle={{}}\n  wrapperClass=""\n  visible={true}\n/>\n'})}),"\n",(0,r.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,r.jsx)(o.Z,{properties:[{name:"height",type:"number | string",default:"80",description:"Height of the component"},{name:"width",type:"number | string",default:"80",description:"Width of the component"},{name:"color",type:"string",default:"#4fa94d",description:"Color of the hearts. Multiple colors for multiple hearts is not supported."},{name:"ariaLabel",type:"string",default:"hearts-loading",description:"Aria label of the component. This is used for accessibility."},{name:"wrapperStyle",type:"object",default:"{}",description:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style."},{name:"wrapperClass",type:"string",default:"",description:"Class of the wrapper element. It can be used for custom styling."},{name:"visible",type:"boolean",default:"true",description:"Visibility of the component"}]})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);